version: 2.1

orbs:
  aws-cli: circleci/aws-cli@0.1.19

workflows:
  build:
    jobs:
      - linux-amd64:
          name: linux-amd64
          filters:
            tags:
              only: /.*/
            branches:
              ignore: /.*/
      - linux-amd64-apline:
          name: linux-amd64-apline
          filters:
            tags:
              only: /.*/
            branches:
              ignore: /.*/
      - darwin-amd64:
          name: darwin-amd64
          filters:
            tags:
              only: /.*/
            branches:
              ignore: /.*/
#      - build_docker:
#          name: build_docker
#      - release-artifacts-github:
#          name: github-artifacts
#          requires:
#            - linux-amd64
#            - linux-amd64-apline
#            - darwin-amd64
#          filters:
#            tags:
#              only: /^\d+\.\d+\.\d+$/
#            branches:
#              ignore: /.*/
      - release-artifacts-s3:
          name: s3-artifacts
          requires:
            - linux-amd64
            - linux-amd64-apline
            - darwin-amd64
          filters:
            tags:
              only: /^\d+\.\d+\.\d+$/
            branches:
              ignore: /.*/

jobs:
  build_docker:
    machine: true
    steps:
      - checkout
      - run:
          name: Build Docker container
          command: |
            docker build -t nsmithuk/local-kms:latest .

  linux-amd64:
    working_directory: /go/src/github.com/nsmithuk/local-kms
    docker:
      - image: circleci/golang:1
    steps:
      - checkout
      - run:
          name: Prep for build
          command: |
            go get -u github.com/golang/dep/cmd/dep
            dep ensure
            mkdir ~/artifacts
      - run:
          name: Build amd64 linux
          command: |
            GOOS=linux GOARCH=amd64 go build -o ~/artifacts/linux-amd64.bin
            chmod +x ~/artifacts/linux-amd64.bin
      - store_artifacts:
          path: ~/artifacts/linux-amd64.bin
          destination: linux-amd64.bin
      - persist_to_workspace:
          root: ~/artifacts
          paths:
            - '*.bin'

  linux-amd64-apline:
    working_directory: /go/src/github.com/nsmithuk/local-kms
    docker:
      - image: golang:1-alpine
    steps:
      - checkout
      - run:
          name: Install git
          command: |
            apk add git
      - run:
          name: Prep for build
          command: |
            go get -u github.com/golang/dep/cmd/dep
            dep ensure
            mkdir /artifacts
      - run:
          name: Build amd64 linux
          command: |
            GOOS=linux GOARCH=amd64 go build -o /artifacts/linux-amd64-alpine.bin
            chmod +x /artifacts/linux-amd64-alpine.bin
      - store_artifacts:
          path: /artifacts/linux-amd64-alpine.bin
          destination: linux-amd64-alpine.bin
      - persist_to_workspace:
          root: /artifacts
          paths:
            - '*.bin'

  darwin-amd64:
    working_directory: /go/src/github.com/nsmithuk/local-kms
    docker:
      - image: circleci/golang:1
    steps:
      - checkout
      - run:
          name: Prep for build
          command: |
            go get -u github.com/golang/dep/cmd/dep
            dep ensure
            mkdir ~/artifacts
      - run:
          name: Build amd64 darwin
          command: |
            GOOS=darwin GOARCH=amd64 go build -o ~/artifacts/darwin-amd64.bin
            chmod +x ~/artifacts/darwin-amd64.bin
      - store_artifacts:
          path: ~/artifacts/darwin-amd64.bin
          destination: darwin-amd64.bin
      - persist_to_workspace:
          root: ~/artifacts
          paths:
            - '*.bin'

  release-artifacts-s3:
    executor: aws-cli/default
    steps:
      - attach_workspace:
          at: ~/artifacts
      - aws-cli/setup
      - run:
          name: Upload to S3
          command: |
            export VERSION_MAJOR=`echo << pipeline.git.tag >> | awk -F '.' '{print $1}'`
            echo "Version Full << pipeline.git.tag >>"
            echo "Version Major $VERSION_MAJOR"

            export ARCH=linux-amd64
            aws s3 cp ~/artifacts/$ARCH.bin s3://local-kms/${VERSION_MAJOR}/local-kms_${ARCH}.bin
            aws s3 cp ~/artifacts/$ARCH.bin s3://local-kms/<< pipeline.git.tag >>/local-kms_${ARCH}.bin
            aws s3 cp ~/artifacts/$ARCH.bin s3://local-kms/localstack/v${VERSION_MAJOR}/local-kms.linux.bin

            export ARCH=linux-amd64-alpine
            aws s3 cp ~/artifacts/$ARCH.bin s3://local-kms/${VERSION_MAJOR}/local-kms_${ARCH}.bin
            aws s3 cp ~/artifacts/$ARCH.bin s3://local-kms/<< pipeline.git.tag >>/local-kms_${ARCH}.bin
            aws s3 cp ~/artifacts/$ARCH.bin s3://local-kms/localstack/v${VERSION_MAJOR}/local-kms.alpine.bin

            export ARCH=darwin-amd64
            aws s3 cp ~/artifacts/$ARCH.bin s3://local-kms/${VERSION_MAJOR}/local-kms_${ARCH}.bin
            aws s3 cp ~/artifacts/$ARCH.bin s3://local-kms/<< pipeline.git.tag >>/local-kms_${ARCH}.bin
            aws s3 cp ~/artifacts/$ARCH.bin s3://local-kms/localstack/v${VERSION_MAJOR}/local-kms.osx.bin

            # Access URL prefix: https://s3-eu-west-2.amazonaws.com/local-kms/

  release-artifacts-github:
    docker:
      - image: circleci/python:latest
    steps:
      - attach_workspace:
          at: ~/artifacts
      - run:
          name: Setup github fingerprint
          command: |
            ls ~/artifacts
            mkdir ~/.ssh
            touch ~/.ssh/known_hosts
            chmod 600 ~/.ssh/known_hosts
            echo "github.com ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAq2A7hRGmdnm9tUDbO9IDSwBK6TbQa+PXYPCPy6rbTrTtw7PHkccKrpp0yVhp5HdEIcKr6pLlVDBfOLX9QUsyCOV0wzfjIJNlGEYsdlLJizHhbn2mUjvSAHQqZETYP81eFzLQNnPHt4EVVUh7VfDESU84KezmD5QlWpXLmvU31/yMf+Se8xhHTvKSCZIFImWwoG6mbUoWf9nzpIoaSjB+weqqUUmpaaasXVal72J+UX2B+2RPW3RcT0eOzQgqlJL3RKrTJvdsjE3JEAvGq3lGHSZXy28G3skua2SmVi/w4yCE6gbODqnTWlg7+wC604ydGXA8VJiS5ap43JXiUFFAaQ==" >> ~/.ssh/known_hosts

            git config --global user.email "local-kms@nsmith.net"
            git config --global user.name "Local KMS CI"
      - run:
          name: Commit new artifacts
          command: |
            git clone --depth=1 git@github.com:nsmithuk/local-kms-artifacts-test.git ./local-kms
            cd local-kms

            export VERSION_MAJOR=`echo << pipeline.git.tag >> | awk -F '.' '{print $1}'`
            echo "Version Full << pipeline.git.tag >>"
            echo "Version Major $VERSION_MAJOR"

            export ARCH=linux-amd64
            mkdir -p $ARCH/$VERSION_MAJOR && cp ~/artifacts/$ARCH.bin $ARCH/$VERSION_MAJOR/local-kms.bin
            mkdir -p $ARCH/<< pipeline.git.tag >> && cp ~/artifacts/$ARCH.bin $ARCH/<< pipeline.git.tag >>/local-kms.bin

            export ARCH=linux-amd64-alpine
            mkdir -p $ARCH/$VERSION_MAJOR && cp ~/artifacts/$ARCH.bin $ARCH/$VERSION_MAJOR/local-kms.bin
            mkdir -p $ARCH/<< pipeline.git.tag >> && cp ~/artifacts/$ARCH.bin $ARCH/<< pipeline.git.tag >>/local-kms.bin

            export ARCH=darwin-amd64
            mkdir -p $ARCH/$VERSION_MAJOR && cp ~/artifacts/$ARCH.bin $ARCH/$VERSION_MAJOR/local-kms.bin
            mkdir -p $ARCH/<< pipeline.git.tag >> && cp ~/artifacts/$ARCH.bin $ARCH/<< pipeline.git.tag >>/local-kms.bin

            git add *
            git commit -a -m "Artifacts for release v<< pipeline.git.tag >>"
            git push origin master
